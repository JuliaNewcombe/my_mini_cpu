module ripple_carry_adder(input reg[31:0] A, B, output reg[31:0] sum, output reg[0:0] carry_flag, overflow_flag);
	
	reg [32:0] carry;
	integer    index;
	
	always @(A or B) begin
	
		carry = 33'b0;
		
		for(index = 0; index < 32; index = index + 1) begin
			sum[i] = A[i]^B[i]^carry[i];
			carry[i+1] = (A[i]&B[i])|(carry[i]&(A[i]|B[i]);
		end
		
		overlow_flag = A[31]&B[31]&(~carry) | (~A[31])&(~B[31])&(carry);
		carry_flag   = carry[32];
		
	end

endmodule;